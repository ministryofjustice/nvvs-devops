---
owner_slack: "#nvvs-devops"
title: ZenHub
last_reviewed_on: 2023-04-11
review_in: 3 months
---

# ZenHub 🧘‍♀️

We use [ZenHub](https://www.zenhub.com/boards) which is integrates natively to GitHub to manage our workload. ZenHub adds additional features like epics, sprints, roadmaps and more.

The lifecycle of a issue is as follows. A user realises a need in the system. This can be a Story, Bug or Task. Issues in progress should be updated at the end of each day.

Once a issue is in our backlog it will first go to [Backlog Refinement](../../../documentation/general-information/our-ceremonies.html#backlog-refinement), where it will become 'Ready for Development' then prioritised in [Backlog Grooming](../../../documentation/general-information/our-ceremonies.html#backlog-grooming). 

The issue will then either be pulled into a Sprint during a [Sprint Planning](../../../documentation/general-information/our-ceremonies.html#sprint-planning) session or it can remain indefinitely in 'Ready for Development' until the backlog is cleared out. 

If a issue is Ready For Development, this does not necessarily mean the issue will be ever be done. Issues are pulled into Sprint based on their value and alignment to the current Roadmap. 


## Story 📚

A requirement or request which is written from the perspective of a end user. Most of our work can be added as a story. We use a [Story Template](https://github.com/ministryofjustice/nvvs-devops/issues/new/choose) which is applied to [our repositories](https://github.com/ministryofjustice/nvvs-devops#core-repositories) 

> **User Story:** 
>
> As a… *[who is the user?]*  
> I need/want/expect to… *[what does the user want to do?]*  
> So that… *[why does the user want to do this?]*  
> 
> **Value / Purpose:**
> 
> *[Describe the value and purpose of the ticket]*
> 
> **Useful Contacts:**
> 
> *[Please add any useful contacts, these may include: Stakeholders, SME’s or 3rd Parties]*
> 
> **Additional Information:**
> 
> *[Please add any useful links or additional information that would be beneficial to anyone working on this ticket]*
> 
> **Definition of Done (DoD):**
> 
> *[Please clearly and concisely detail the DoD]*
> 
> Checklist for definition of done and acceptance criteria, example below (optional).
> 
> **Example**  
> 
> ✅ Documentation has been written / updated  
> ✅ README.md has been updated  
> ✅ User docs have been updated  
> ✅ Another team member has reviewed  
> ✅ Tests are green  

## Bug 🐛

Anything detrimental to the system. Bugs affecting service are pulled into sprint and dealt with as a matter of priority.

## Task 📝

Something that can be completed by one person and is of limited complexity.  A task doesn't have to hold clear value for an end-user.

## Spike 📌

A spike is a user story for which the team cannot estimate. We timebox this effort in [Sprint Planning](../../../documentation/general-information/our-ceremonies.html#sprint-planning) to learn and provide answers which the team can create stories and estimate.
